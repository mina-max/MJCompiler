// generated with ast extension for cup
// version 0.8
// 29/5/2021 14:18:47


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ReturnType ReturnType);
    public void visit(FormParsOpt FormParsOpt);
    public void visit(RelopOpt RelopOpt);
    public void visit(DesList DesList);
    public void visit(Relop Relop);
    public void visit(ActParsOpt ActParsOpt);
    public void visit(MethodDeclListOpt MethodDeclListOpt);
    public void visit(PrintParamOpt PrintParamOpt);
    public void visit(Else Else);
    public void visit(StatementList StatementList);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(ReturnExprOpt ReturnExprOpt);
    public void visit(DesElement DesElement);
    public void visit(ConditionCorrect ConditionCorrect);
    public void visit(DeclList DeclList);
    public void visit(ArrayOpt ArrayOpt);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(ExtendsOpt ExtendsOpt);
    public void visit(MulOp MulOp);
    public void visit(CaseList CaseList);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(VarDeclOnly VarDeclOnly);
    public void visit(AssignOp AssignOp);
    public void visit(Do Do);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ThenStatement ThenStatement);
    public void visit(ActPars ActPars);
    public void visit(AddOp AddOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Init Init);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(DesOperators DesOperators);
    public void visit(FormPars FormPars);
    public void visit(ElseOpt ElseOpt);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(NoPrintParam NoPrintParam);
    public void visit(PrintParam PrintParam);
    public void visit(NoActPars NoActPars);
    public void visit(ActParsExpr ActParsExpr);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactor NewFactor);
    public void visit(NewArrayFactor NewArrayFactor);
    public void visit(ConstFactor ConstFactor);
    public void visit(MethodFactor MethodFactor);
    public void visit(VarFactor VarFactor);
    public void visit(NoExpression NoExpression);
    public void visit(RetExpr RetExpr);
    public void visit(TermFactor TermFactor);
    public void visit(TermExpr TermExpr);
    public void visit(NotFirstTerm NotFirstTerm);
    public void visit(PositiveTerm PositiveTerm);
    public void visit(NegativeTerm NegativeTerm);
    public void visit(LessRel LessRel);
    public void visit(LessEqRel LessEqRel);
    public void visit(GreaterRel GreaterRel);
    public void visit(GreaterEqRel GreaterEqRel);
    public void visit(NotEqualRel NotEqualRel);
    public void visit(EqualRel EqualRel);
    public void visit(CondFactNoRelop CondFactNoRelop);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactSingle CondFactSingle);
    public void visit(CondAnd CondAnd);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(CondOr CondOr);
    public void visit(ElseKeyword ElseKeyword);
    public void visit(NoElseStmt NoElseStmt);
    public void visit(ElseStmt ElseStmt);
    public void visit(ErrorCondition ErrorCondition);
    public void visit(CorrectCondition CorrectCondition);
    public void visit(ExprPar ExprPar);
    public void visit(ExprList ExprList);
    public void visit(AssignError AssignError);
    public void visit(AssignOperator AssignOperator);
    public void visit(ArrayIdent ArrayIdent);
    public void visit(FieldIdent FieldIdent);
    public void visit(NoDesList NoDesList);
    public void visit(DesListExpr DesListExpr);
    public void visit(Designator Designator);
    public void visit(DecDes DecDes);
    public void visit(IncDes IncDes);
    public void visit(FuncDes FuncDes);
    public void visit(AssignDes AssignDes);
    public void visit(DoStatement DoStatement);
    public void visit(NoStatement NoStatement);
    public void visit(StatementListExpr StatementListExpr);
    public void visit(ThenStmt ThenStmt);
    public void visit(ListStatement ListStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(YieldStatement YieldStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorStatementExpr DesignatorStatementExpr);
    public void visit(FormParsSingle FormParsSingle);
    public void visit(FormParsListError FormParsListError);
    public void visit(FormParsOne FormParsOne);
    public void visit(FormParsListExpr FormParsListExpr);
    public void visit(NoFormPars NoFormPars);
    public void visit(FormParsListOptExpr FormParsListOptExpr);
    public void visit(ReturnVoid ReturnVoid);
    public void visit(ReturnTypeExpr ReturnTypeExpr);
    public void visit(NoMethodDeclListOpt NoMethodDeclListOpt);
    public void visit(MethodDeclListOptExpr MethodDeclListOptExpr);
    public void visit(MethodName MethodName);
    public void visit(MethodBody MethodBody);
    public void visit(MethodSign MethodSign);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDeclListExpr MethodDeclListExpr);
    public void visit(NoParentClass NoParentClass);
    public void visit(ParentClass ParentClass);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(NotArray NotArray);
    public void visit(Array Array);
    public void visit(NoVars NoVars);
    public void visit(VarDeclOnlyExpr VarDeclOnlyExpr);
    public void visit(VarDeclSingle VarDeclSingle);
    public void visit(ErrorVarDeclList ErrorVarDeclList);
    public void visit(VarDeclOne VarDeclOne);
    public void visit(VarDeclListExpr VarDeclListExpr);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclExpr VarDeclExpr);
    public void visit(Type Type);
    public void visit(NumberConst NumberConst);
    public void visit(CharConst CharConst);
    public void visit(BoolConst BoolConst);
    public void visit(ConstDeclSingle ConstDeclSingle);
    public void visit(ConstDeclOne ConstDeclOne);
    public void visit(ConstDeclListExpr ConstDeclListExpr);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDecl NoDecl);
    public void visit(Declarations Declarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
